name: Android APK (Capacitor sync + assembleDebug)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node 환경에서 Capacitor 동기화
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm deps
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Capacitor sync (prepare android project with web assets)
        run: npx cap sync android

      # JDK + Android SDK 준비
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install platforms/build-tools & accept licenses
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"
          yes | sdkmanager --licenses

      # Gradle 빌드
      - name: Assemble debug APK
        working-directory: android
        env:
          ORG_GRADLE_PROJECT_android.useAndroidX: true
          ORG_GRADLE_PROJECT_android.enableJetifier: true
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon --stacktrace --warning-mode all clean assembleDebug

      # 산출물 업로드
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # 실패 시 로그 업로드
      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: |
            android/**/build/*.log
            android/**/build/reports/**
            android/**/outputs/logs/**
            android/**/build/outputs/**
